within Grate_Boiler.Components;
package Radiation "Models for radiative heattransfer"
  extends ClaRa.Basics.Icons.PackageIcons.Components80;

  function Viewfactor_Function "Calculation of viewfactors for a cuboid"

    input ClaRa.Basics.Units.Length x = 1  "Length of Volume in x-Direction";
    input ClaRa.Basics.Units.Length y = 1  "Length of Volume in y-Direction";
    input ClaRa.Basics.Units.Length z = 1  "Length of Volume in z-Direction";

  //   final parameter ClaRa.Basics.Units.Area A_1 = x * y;
  //
  //   final parameter ClaRa.Basics.Units.Area A_2 = A_1;
  //
  //   final parameter ClaRa.Basics.Units.Area A_3 = x * z;
  //
  //   final parameter ClaRa.Basics.Units.Area A_4 = A_3;
  //
  //   final parameter ClaRa.Basics.Units.Area A_5 = y * z;
  //
  //   final parameter ClaRa.Basics.Units.Area A_6 = A_5;
  protected
    Real B  "Geometry ratio";
    Real C  "Geometry ratio";
    Real F_12 "View factor between surface 1 and 2";  //same as F_21
    Real F_34 "View factor between surface 3 and 4";  //same as F_43
    Real F_56 "View factor between surface 5 and 6";  //same as F_65

    Real F_13 "View factor between surface 1 and 3";  //same as F_14,F_23,F_24
    Real F_15 "View factor between surface 1 and 5";  //same as F_16,F_25,F_26
    Real F_35 "View factor between surface 3 and 5";  //same as F_45,F_36,F_46
    Real F_31 "View factor between surface 3 and 1";  //same as F_32,F_41,F_42
    Real F_51 "View factor between surface 5 and 1";  //same as F_52,F_61,F_62
    Real F_53 "View factor between surface 5 and 3";  //same as F_63,F_34,F_64
  public
    output Real VF[6,6];

  algorithm
  /*Nine equations are requiered for all viewfactors, viewfactor matrice is a 6*6 big with 0 on the diagonal*/

  // for parallel plates - after VDI Wärmeatlas Chapter Kb5
   B := y/z;
   C := x/z;
   F_12 := 1/Modelica.Constants.pi*(1/(B*C)*log((1+B^2)*(1+C^2)/(1+B^2+C^2))
             -2/B*atan(C)-2/C*atan(B)+2/C*sqrt(1+C^2)*atan(B/sqrt(1+C^2))+2/B*sqrt(1+B^2)*atan(C/sqrt(1+B^2)));

   B := z/y;
   C := x/y;
   F_34 := 1/Modelica.Constants.pi*(1/(B*C)*log((1+B^2)*(1+C^2)/(1+B^2+C^2))
             -2/B*atan(C)-2/C*atan(B)+2/C*sqrt(1+C^2)*atan(B/sqrt(1+C^2))+2/B*sqrt(1+B^2)*atan(C/sqrt(1+B^2)));

   B := y/x;
   C := z/x;
   F_56 := 1/Modelica.Constants.pi*(1/(B*C)*log((1+B^2)*(1+C^2)/(1+B^2+C^2))
             -2/B*atan(C)-2/C*atan(B)+2/C*sqrt(1+C^2)*atan(B/sqrt(1+C^2))+2/B*sqrt(1+B^2)*atan(C/sqrt(1+B^2)));

  //for edging plates - after VDI Wärmeatlas Chapter Kb5
    B := y/x;
    C := z/x;
    F_13 := 1/(Modelica.Constants.pi*B)*(B*atan(1/B)+C*atan(1/C)-sqrt(B^2+C^2)*atan(1/sqrt(B^2+C^2))+1/4*(B^2*log((1+B^2+C^2)*B^2/((B^2+C^2)*(1+B^2)))+C^2*log((1+B^2+C^2)*C^2/((B^2+C^2)*(1+C^2)))-log((1+B^2+C^2)/((1+B^2)*(1+C^2)))));

    B := x/y;
    C := z/y;
    F_15 := 1/(Modelica.Constants.pi*B)*(B*atan(1/B)+C*atan(1/C)-sqrt(B^2+C^2)*atan(1/sqrt(B^2+C^2))+1/4*(B^2*log((1+B^2+C^2)*B^2/((B^2+C^2)*(1+B^2)))+C^2*log((1+B^2+C^2)*C^2/((B^2+C^2)*(1+C^2)))-log((1+B^2+C^2)/((1+B^2)*(1+C^2)))));

    B := x/z;
    C := y/z;
    F_35 := 1/(Modelica.Constants.pi*B)*(B*atan(1/B)+C*atan(1/C)-sqrt(B^2+C^2)*atan(1/sqrt(B^2+C^2))+1/4*(B^2*log((1+B^2+C^2)*B^2/((B^2+C^2)*(1+B^2)))+C^2*log((1+B^2+C^2)*C^2/((B^2+C^2)*(1+C^2)))-log((1+B^2+C^2)/((1+B^2)*(1+C^2)))));

    B := z/x;
    C := y/x;
    F_31 := 1/(Modelica.Constants.pi*B)*(B*atan(1/B)+C*atan(1/C)-sqrt(B^2+C^2)*atan(1/sqrt(B^2+C^2))+1/4*(B^2*log((1+B^2+C^2)*B^2/((B^2+C^2)*(1+B^2)))+C^2*log((1+B^2+C^2)*C^2/((B^2+C^2)*(1+C^2)))-log((1+B^2+C^2)/((1+B^2)*(1+C^2)))));

    B := z/y;
    C := x/y;
    F_51 := 1/(Modelica.Constants.pi*B)*(B*atan(1/B)+C*atan(1/C)-sqrt(B^2+C^2)*atan(1/sqrt(B^2+C^2))+1/4*(B^2*log((1+B^2+C^2)*B^2/((B^2+C^2)*(1+B^2)))+C^2*log((1+B^2+C^2)*C^2/((B^2+C^2)*(1+C^2)))-log((1+B^2+C^2)/((1+B^2)*(1+C^2)))));

    B := y/z;
    C := x/z;
    F_53 := 1/(Modelica.Constants.pi*B)*(B*atan(1/B)+C*atan(1/C)-sqrt(B^2+C^2)*atan(1/sqrt(B^2+C^2))+1/4*(B^2*log((1+B^2+C^2)*B^2/((B^2+C^2)*(1+B^2)))+C^2*log((1+B^2+C^2)*C^2/((B^2+C^2)*(1+C^2)))-log((1+B^2+C^2)/((1+B^2)*(1+C^2)))));

   for i in 1:6 loop
       for j in 1:6 loop
         if i==j then VF[i,j] := 0;
           else
           if i==1 and j==2 then VF[i,j] := F_12;
           elseif i==1 and j==3 then VF[i,j] := F_13;
           elseif i==1 and j==4 then VF[i,j] := F_13;
           elseif i==1 and j==5 then VF[i,j] := F_15;
           elseif i==1 and j==6 then VF[i,j] := F_15;
          else
           if i==2 and j==1 then VF[i,j] := F_12;
           elseif i==2 and j==3 then VF[i,j] := F_13;
           elseif i==2 and j==4 then VF[i,j] := F_13;
           elseif i==2 and j==5 then VF[i,j] := F_15;
           elseif i==2 and j==6 then VF[i,j] := F_15;
          else
           if i==3 and j==1 then VF[i,j] := F_31;
           elseif i==3 and j==2 then VF[i,j] := F_31;
           elseif i==3 and j==4 then VF[i,j] := F_34;
           elseif i==3 and j==5 then VF[i,j] := F_35;
           elseif i==3 and j==6 then VF[i,j] := F_35;
          else
           if i==4 and j==1 then VF[i,j] := F_31;
           elseif i==4 and j==2 then VF[i,j] := F_31;
           elseif i==4 and j==3 then VF[i,j] := F_34;
           elseif i==4 and j==5 then VF[i,j] := F_35;
           elseif i==4 and j==6 then VF[i,j] := F_35;
          else
           if i==5 and j==1 then VF[i,j] := F_51;
           elseif i==5 and j==2 then VF[i,j] := F_51;
           elseif i==5 and j==3 then VF[i,j] := F_53;
           elseif i==5 and j==4 then VF[i,j] := F_53;
           elseif i==5 and j==6 then VF[i,j] := F_56;
          else
           if i==6 and j==1 then VF[i,j] := F_51;
           elseif i==6 and j==2 then VF[i,j] := F_51;
           elseif i==6 and j==3 then VF[i,j] := F_53;
           elseif i==6 and j==4 then VF[i,j] := F_53;
           elseif i==6 and j==5 then VF[i,j] := F_56;
          end if;end if;
         end if;end if;
        end if;end if;end if;
     end for; end for;

  end Viewfactor_Function;

  record Viewfactor_5Elements "Record for Viewfactor calculated in external programm"
    extends ClaRa.Basics.Icons.RecordIcon;

    parameter Integer n = 5;
    Real Viewfactor[4*n+2,4*n+2];

  end Viewfactor_5Elements;

  partial model RadiationModel_Nielsen_Partial "Same as described in Nielsen et al. 'Softsensor modelling' "

    // Geometry of fluegas volume relative to surroundings
    parameter Integer m = 2 "number of zones vertically in fluegas volume, connection to gasphases and walls" annotation (Dialog(tab="Discrtization Settings"));
    //    annotation (Dialog(connectorSizing=true,tab="Discrteization Settings"));
    parameter Integer n = 1 "number of bottom heat ports connections with bed"  annotation (Dialog(tab="Discrtization Settings"));
    //    annotation (tab=Discrtization Settings));
    parameter Integer k = 1 "number of upward heat ports" annotation (Dialog(tab="Discrtization Settings"));
    //    annotation (Dialog(connectorSizing=true));

    final parameter Integer n_ports(min = 2) = 2*m + n + k "total number of heat ports";
    parameter Real A_down_scaling = 8/4  "bed size versus furnace fluegas channel size";  //  8/6

    parameter ClaRa.Basics.Units.Length length = 1 "total fluegas volume length (qubic rectangle)"  annotation (Dialog(tab="General", group="Geometry"));
    parameter ClaRa.Basics.Units.Length width = 1 "total fluegas volume width (qubic rectangle)" annotation (Dialog(tab="General", group="Geometry"));
    parameter ClaRa.Basics.Units.Length height = 1 "total fluegas volume height (qubic rectangle)" annotation (Dialog(tab="General", group="Geometry"));
    final parameter ClaRa.Basics.Units.Area A_walls=(2*length*height + 2*width*height)/m     "Area in horizontal direction" annotation (Dialog(tab="General", group="Geometry"));

    final parameter ClaRa.Basics.Units.Area A_top = length*width/k "Area in upwards direction";
    final parameter ClaRa.Basics.Units.Area A_bottom = length*width/n*A_down_scaling "Area in downwards direction";
    final parameter ClaRa.Basics.Units.Area A_gas= A_walls + A_top*k + A_bottom*n "Area of each gas volume";

      // Radiative parameters
    parameter Real alpha_gas = 0.4 "gas absorptance/emittance" annotation (Dialog(tab="General", group="Radiationparameters"));
    parameter Real tau_gas = 0.6 "gas transmittance" annotation (Dialog(tab="General", group="Radiationparameters"));
    parameter Real rho_gas = 1- tau_gas - alpha_gas "gas reflectance" annotation (Dialog(tab="General", group="Radiationparameters"));

    parameter Real alpha_walls = 0.9 "horizontal absorptance/emittance" annotation (Dialog(tab="General", group="Radiationparameters"));
    parameter Real tau_walls = 0.0 "horizontal transmittance" annotation (Dialog(tab="General", group="Radiationparameters"));
    parameter Real rho_walls = 1 - tau_walls - alpha_walls "horizontal reflectance" annotation (Dialog(tab="General", group="Radiationparameters"));

    parameter Real alpha_bottom = 0.8 "downwards absorptance/emittance" annotation (Dialog(tab="General", group="Radiationparameters"));
    parameter Real tau_bottom = 0.0 "downwards transmittance" annotation (Dialog(tab="General", group="Radiationparameters"));
    parameter Real rho_bottom = 1 - tau_bottom - alpha_bottom "downwards reflectance" annotation (Dialog(tab="General", group="Radiationparameters"));

    parameter Real alpha_top = 0.71 "upwards absorptance/emittance" annotation (Dialog(tab="General", group="Radiationparameters"));
    parameter Real tau_top = 0.0 "upwards transmittance" annotation (Dialog(tab="General", group="Radiationparameters"));
    parameter Real rho_top = 1 - tau_top - alpha_top "upwards reflectance" annotation (Dialog(tab="General", group="Radiationparameters"));

    ClaRa.Basics.Units.HeatFlowRate H[n_ports] "incoming heat flow rate vector";
    ClaRa.Basics.Units.HeatFlowRate B[n_ports] "outgoing heat flow rate vector";
    ClaRa.Basics.Units.HeatFlowRate Q[n_ports] "heat transfer rate vector";
    ClaRa.Basics.Units.HeatFlowRate Q_sum = sum(Q);

    ClaRa.Basics.Interfaces.HeatPort_a heatPorts_top[k] annotation (Placement(transformation(extent={{-10,90},{10,110}})));
    ClaRa.Basics.Interfaces.HeatPort_a heatPorts_walls[m] annotation (Placement(transformation(extent={{90,-10},{110,10}}),  iconTransformation(extent={{90,-10},{110,10}})));
    ClaRa.Basics.Interfaces.HeatPort_a heatPorts_gasPhase[m] annotation (Placement(transformation(extent={{-110,-10},{-90,10}}),  iconTransformation(extent={{-110,-10},{-90,10}})));
    ClaRa.Basics.Interfaces.HeatPort_a heatPorts_bottom[n] annotation (Placement(transformation(extent={{-10,-110},{10,-90}})));
    annotation (Diagram(coordinateSystem(extent={{-100,-100},{100,100}})), Icon(coordinateSystem(extent={{-100,-100},{100,100}}), graphics={Bitmap(
            extent={{-102,-100},{102,100}},
            imageSource=""
                 + "",
            fileName="modelica://ClaRa_Dev/Resources/Images/Radiation.png")}));

  end RadiationModel_Nielsen_Partial;

  model RadiationModel_Nielsen_pseudoStates
    extends RadiationModel_Nielsen_Partial;

    parameter Real timeConst_ps=0.1;

    ClaRa.Basics.Units.Temperature T_top_ps[k](each start=(20+273.15)^4, stateSelect=StateSelect.prefer);
    ClaRa.Basics.Units.Temperature T_walls_ps[m](each start=(20+273.15)^4, stateSelect=StateSelect.prefer);
    ClaRa.Basics.Units.Temperature T_gasPhase_ps[m](each start=(20+273.15)^4, stateSelect=StateSelect.prefer);
    ClaRa.Basics.Units.Temperature T_bottom_ps[n](each start=(20+273.15)^4, stateSelect=StateSelect.prefer);

    //Area matrix
   final parameter ClaRa.Basics.Units.Area A[n_ports]=cat(
        1,
        A_bottom*ones(n),
        A_walls*ones(m),
        A_top*ones(k),
        A_gas*ones(m)) "Area vector";

  //weighing of areas
   final parameter ClaRa.Basics.Units.Area A_m[n_ports, n_ports]=cat(
        2,
        transpose(fill(vector(A/(sum(A) - A_bottom)), n)),
        transpose(fill(vector(A/(sum(A) - A_walls)), m)),
        transpose(fill(vector(A/(sum(A) - A_top)), k)),
        transpose(fill(vector(A/(sum(A) - A_gas)), m)));

    //Calculating F (simplified Viewfactor matrix)
   final parameter Real F[n_ports, n_ports]=A_m .* (fill(
        1,
        n_ports,
        n_ports) - identity(n_ports)) "view factor matrix";

    parameter Real epsilon[n_ports]=cat(
        1,
        alpha_bottom*ones(n),
        alpha_walls*ones(m),
        alpha_top*ones(k),
        alpha_gas*ones(m)) "emittance vector";

    // ClaRa.Basics.Interfaces.HeatPort_a heatPorts_top[k] annotation (Placement(transformation(extent={{-10,90},{10,110}})));
    // ClaRa.Basics.Interfaces.HeatPort_a heatPorts_walls[m] annotation (Placement(transformation(extent={{90,-10},{110,10}}),  iconTransformation(extent={{90,-10},{110,10}})));
    // ClaRa.Basics.Interfaces.HeatPort_a heatPorts_gasPhase[m] annotation (Placement(transformation(extent={{-110,-10},{-90,10}}),  iconTransformation(extent={{-110,-10},{-90,10}})));
    // ClaRa.Basics.Interfaces.HeatPort_a heatPorts_bottom[n] annotation (Placement(transformation(extent={{-10,-110},{10,-90}})));

  equation

    der(T_top_ps) = timeConst_ps*(heatPorts_top.T.^4-T_top_ps);
    der(T_walls_ps) = timeConst_ps*(heatPorts_walls.T.^4-T_walls_ps);
    der(T_gasPhase_ps) = timeConst_ps*(heatPorts_gasPhase.T.^4-T_gasPhase_ps);
    der(T_bottom_ps) = timeConst_ps*(heatPorts_bottom.T.^4-T_bottom_ps);

     // Incoming heat transfer rates
    H = F*B;  //Calculates H

    // Outgoing heat transfer rates -Calculates B
    for i in 1:n loop
      B[i] = A[i]*epsilon[i]*Modelica.Constants.sigma*T_bottom_ps[i] + rho_bottom*H[i];
    end for;

    for i in n + 1:n + m loop
      B[i] = A[i]*epsilon[i]*Modelica.Constants.sigma*T_walls_ps[i - n]  + rho_walls*H[i];
    end for;

    for i in n + m + 1:n + m + k loop
      B[i] = A[i]*epsilon[i]*Modelica.Constants.sigma*T_top_ps[i - n - m]  + rho_top*H[i];
    end for;

    for i in n + m + k + 1:n_ports loop
      B[i] = A[i]*epsilon[i]*Modelica.Constants.sigma*T_gasPhase_ps[i - n - m - k]  + tau_gas*H[i];
    end for;

    // Heat transfer rates (difference between incoming and outgoing heat transfer rate)
    Q = H - B;  //Calculates Q

    // Communicate heat transfer rates to heat ports
    heatPorts_bottom.Q_flow = -Q[1:n];
    heatPorts_walls.Q_flow = -Q[n + 1:n + m];    //shouldn't be [n + 1:m]
    heatPorts_top.Q_flow = -Q[n + m + 1:n + m + k];  //shouldn't be [n + m + 1:k]
    heatPorts_gasPhase.Q_flow = -Q[n + m + k + 1:n_ports];  //shouldn't be [n + m + k 1:n_ports]

    annotation (Diagram(coordinateSystem(extent={{-100,-100},{100,100}})), Icon(coordinateSystem(extent={{-100,-100},{100,100}})));
  end RadiationModel_Nielsen_pseudoStates;
end Radiation;
